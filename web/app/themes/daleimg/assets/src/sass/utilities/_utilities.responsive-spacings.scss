/* ==========================================================================
   #RESPONSIVE-SPACINGS
   ========================================================================== */

/**
 * Utility classes enhancing the normal spacing classes by adding responsiveness
 * to them. By default this brings us the following classes:
 *
 *   .u-margin-bottom-none@mobile {}
 *   .u-margin-bottom-none@tablet {}
 *   .u-margin-bottom-none@desktop {}
 *   .u-margin-bottom-none@wide {}
 *
 * But we can affect the classes that get generated by altering the appropriate
 * Sass maps below.
 */



// When using Sass-MQ, this defines the separator for the breakpoints suffix
// in the class name. By default, we are generating the responsive suffixes
// for the classes with a `@` symbol so you get classes like:
//
//   <div class="u-margin-bottom@mobile">
//
// Be aware that since the `@` symbol is a reserved symbol in CSS, it has to be
// escaped with a `\`. In the markup though, you write your classes without the
// backslash (e.g. `u-margin-bottom@mobile`).
$sockman-widths-breakpoint-separator: \@ !default;



$sockman-responsive-spacing-directions: (
  "-top": "-top",
  "-bottom": "-bottom",
  "-vertical": "-top" "-bottom",
  "-horizontal": "-left" "-right",
  "-right": "-right"
) !default;

$sockman-responsive-spacing-properties: (
  "margin": "margin",
  "padding": "padding"
) !default;

$sockman-responsive-spacing-scale-factors: (
  null: 1,
  "-none": 0,
  "-tiny": .25,
  "-small": .5,
  "-large": 2,
  "-huge": 4,
) !default;



@mixin sockman-responsive-spacings($sockman-bp-name) {

  /**
   * loop over margin & padding
   */
  @each $property-namespace, $property in $sockman-responsive-spacing-properties {

    /**
     * loop over directions (left, right, vertical)
     */
    @each $direction-namespace, $direction-rules in $sockman-responsive-spacing-directions {

      /**
       * loop over sizes (tiny, small, large etc)
       */
      @each $size-namespace, $scale-factor in $sockman-responsive-spacing-scale-factors {

        .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace}#{$sockman-widths-breakpoint-separator}#{$sockman-bp-name} {

          // @debug($sockman-bp-name, $base-unit);

          @each $direction in $direction-rules {
            #{$property}#{$direction}: calc(var(--spacing-unit) * #{$scale-factor}) !important;
          }

        }

      }

    }

  }
}

/* stylelint-disable max-nesting-depth */

@each $sockman-bp-name, $sockman-bp-value in $mq-breakpoints {

  // @debug($sockman-bp-name, $base-unit);

  @include mq($from: $sockman-bp-name) {

    @include sockman-responsive-spacings($sockman-bp-name);

  }


}

/* stylelint-enable max-nesting-depth */
